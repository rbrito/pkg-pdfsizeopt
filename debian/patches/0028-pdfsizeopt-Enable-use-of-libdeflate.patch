From 5e735dc3cbe73af88cfb5e343e43bf3ab0d9f211 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Rog=C3=A9rio=20Brito?= <rbrito@gmail.com>
Date: Fri, 12 Mar 2021 07:15:51 -0300
Subject: [PATCH] pdfsizeopt: Enable use of libdeflate.

---
 lib/pdfsizeopt/main.py | 31 ++++++++++++++++++++++++++++---
 1 file changed, 28 insertions(+), 3 deletions(-)

diff --git a/lib/pdfsizeopt/main.py b/lib/pdfsizeopt/main.py
index 1251418..7779f73 100644
--- a/lib/pdfsizeopt/main.py
+++ b/lib/pdfsizeopt/main.py
@@ -237,7 +237,29 @@ import zlib
 from pdfsizeopt import cff
 from pdfsizeopt import psproc
 
-compat_compress = None
+try:
+  from ctypes import CDLL, c_size_t, c_void_p, create_string_buffer
+
+  # Basic bureaucracy
+  libdeflate = CDLL('libdeflate.so.0')
+  libdeflate.libdeflate_alloc_compressor.restype = c_void_p
+  libdeflate.libdeflate_zlib_compress.argtypes = [c_void_p, c_void_p, c_size_t, c_void_p, c_size_t]
+  libdeflate.libdeflate_free_compressor.argtypes = [c_void_p]
+
+  def libdeflate_compress(indata, level=12):
+    compressor = libdeflate.libdeflate_alloc_compressor(level)
+    outdata_size = libdeflate.libdeflate_zlib_compress_bound(compressor, len(indata))
+    outdata = create_string_buffer(outdata_size)
+    res = libdeflate.libdeflate_zlib_compress(compressor, indata, len(indata),
+                                              outdata, outdata_size)
+    result = outdata[:res]
+    libdeflate.libdeflate_free_compressor(compressor)
+    return result
+
+  compat_compress = libdeflate_compress
+except OSError:
+  compat_compress = None
+
 
 class Error(Exception):
   """Comon base class for exceptions defined in this module."""
@@ -9716,17 +9738,20 @@ def main(argv, script_dir=None, zip_file=None):
     return
   assert f.mode == 'optimize'  # Implemented below.
 
+  # Very ugly
   global compat_compress
-  compat_compress = zlib.compress
 
+  # FIXME(rbrito): Make loading zopfli/libdeflate uniform.
   if f.use_zopfli:
     try:
       import zopfli.zlib
-      print('  **** Found zopfli!')
       compat_compress = lambda data, level: zopfli.zlib.compress(data)
+      print('  **** Using zopfli')
     except ImportError:
       print('  **** Zopfli requested, but not loadable; using zlib')
       compat_compress = zlib.compress
+  elif compat_compress is not None:
+    print('   **** Using libdeflate')
   else:
     print('  **** Using zlib')
     compat_compress = zlib.compress
-- 
2.30.1

